{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","n","string2","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":"AAAA;AACA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ,EAEA;;AACA,IAAIE,MAAM,y9DAAV;AAkDA,IAAIC,CAAC,GAAG,CAAR;AACA,IAAIC,OAAO,GAAG,EAAd,EAAoB;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAIC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACbC,EAAAA,UAAU,CAAC,YAAM;AACb;AACA;AACA;AACA,QAAIJ,MAAM,CAACC,CAAD,CAAN,KAAc,IAAlB,EAAwB;AACpBC,MAAAA,OAAO,IAAI,MAAX;AACH,KAFD,MAEO,IAAIF,MAAM,CAACC,CAAD,CAAN,KAAc,GAAlB,EAAuB;AAC1BC,MAAAA,OAAO,IAAI,QAAX,CAD0B,CACH;AAC1B,KAFM,MAEA;AACHA,MAAAA,OAAO,IAAIF,MAAM,CAACC,CAAD,CAAjB;AACH,KAVY,CAYb;AACA;;;AAEAL,IAAAA,IAAI,CAACS,SAAL,GAAiBH,OAAjB;AACAH,IAAAA,KAAK,CAACM,SAAN,GAAkBL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBL,CAApB,CAAlB,CAhBa,CAiBb;;AACAM,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,KAAnB,EAlBa,CAkBgB;;AAC7BZ,IAAAA,IAAI,CAACY,QAAL,CAAc,CAAd,EAAiB,KAAjB,EAnBa,CAmBgB;;AAE7B,QAAGP,CAAC,GAAGD,MAAM,CAACS,MAAP,GAAgB,CAAvB,EAA2B;AACvBR,MAAAA,CAAC,IAAI,CAAL,CADuB,CAEvB;;AACAE,MAAAA,IAAI;AACP;AACJ,GA1BS,EA0BP,CA1BO,CAAV;AA2BH,CA5BD;;AA6BAA,IAAI","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["// 获取html。这个函数的原理：通过CSS选择器找到html\r\nlet html = document.querySelector('#html');\r\nlet style = document.querySelector('#style');\r\n\r\n// 加/* 的原因：因为在style.innerHTML = string.substring(0, n);这行代码时，是加CSS样式，中文会对样式产生影响，所以要给中文加上CSS的注释符号\r\nlet string = `/* 你好，我是猫\r\n * 接下来我演示一下我的前端功底\r\n * 首先我要准备一个div\r\n*/\r\n#div1 {\r\n    border: 1px solid red;\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n/* 接下来我要把div变成一个八卦图\r\n * 注意看好了\r\n * 首先第一步，把div变成一个圆\r\n*/\r\n#div1 {\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\r\n    border: none\r\n}\r\n/* 第二步：添加渐变色\r\n * 搜索CSS Gradient，找到白色渐变为黑色的位置\r\n * 复制第二行生成的代码（第一行没用）\r\n*/\r\n#div1 {\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个风火轮 */\r\n#div1::before {\r\n    width: 100px;\r\n    height: 100px;\r\n    /* 有定位最好写上top和left，不然易出bug。 \r\n     * left和transform搭配，可以用来元素居中\r\n     */\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    /* 八卦图还有2个小圆，但伪元素不能套伪元素，所以仍然可以用渐变来解决 */\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n    border-radius: 50%;\r\n}\r\n#div1::after {\r\n    width: 100px;\r\n    height: 100px;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n    border-radius: 50%;\r\n}\r\n`;\r\n\r\nlet n = 0;\r\nlet string2 = '';   // string是保存要显示的全部文字，而string2是对每次要显示的字进行缓存\r\n\r\n// 注意setTimeout和setInterval的区别。这里使用setInterval，因为可以每隔3秒都执行一次，而setTimeout只执行一次就不执行了。\r\n// 3秒钟后，n变为n+1。 parcel在3秒后会自动把文本变为n+1，而不需要重新刷新网页，这是parcel的优点\r\n// 新手写法\r\n// setInterval(() => {\r\n//     n = n + 1;\r\n//     html.innerHTML = n;\r\n// }, 1000)\r\n\r\n// 拓展：老手不用setInterval，而是用递归的setTimeout\r\nlet step = () => {\r\n    setTimeout(() => {\r\n        // 如果字符是换行，JS里会自动将换行变为空格---如果对这个有疑问可以console.log一下string的每个字符，会发现有换行在，此时要把JS里的换行改为html的<br>换行标签\r\n        // 如果不是换行，就直接从string那里抄过来，加到string2中\r\n        // 完整写法：\r\n        if (string[n] === \"\\n\") {\r\n            string2 += \"<br>\";\r\n        } else if (string[n] === \" \") {\r\n            string2 += \"&nbsp;\"    // &nbsp是html中的空格\r\n        } else {\r\n            string2 += string[n]\r\n        }\r\n\r\n        // 下面这个是简便写法：(没有判断缩进)\r\n        // string2 += (string[n] === \"\\n\" ? \"<br>\" : string[n])\r\n\r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0, n);\r\n        // 页面代码太长，设置页面自动往下滚动——上下方向\r\n        window.scrollTo(0, 99999)    // 这是设置的PC端口自动滚动\r\n        html.scrollTo(0, 99999)      // 这是设置的手机端口自动滚动\r\n\r\n        if(n < string.length - 1 ) {\r\n            n += 1;\r\n            // step()这个目的是为了让每次执行的结果保留下来，索引值0变1,1变2,2变3,3变4...\r\n            step();\r\n        }\r\n    }, 0);\r\n};\r\nstep();\r\n\r\n"]}